#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long int ull;


#define fnf() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define nl "\n"
#define pb push_back
#define ff first
#define ss second
#define set_bits __builtin_popcountll
#define nmap unordered_map
#define CC continue
#define nset unordered_set
#define all(a) a.begin(),a.end()
#define i_max INT_MAX
#define i_min INT_MIN
#define me(x) memset(x,-1,sizeof(x))
#define sout cout << fixed << setprecision(12)
#define sz(x) ((int)(x).size())
#define le(x) x.length()
#define PI 3.141592653589793238462
#define FOR(i,n) for(int i=1; i < n; i++)


const ull N = 1e9;
const int lol = 300;


template<typename T1> void _printV(vector<T1> &v1) {
	for (auto &it : v1) {
		cout << it << " ";
	}	cout << nl;
}
template<typename T1, typename T2> void _printM(nmap<T1, T2> &m1) {
	for (auto &it : m1) {
		cout << it.ff << " " << it.ss << nl;
	}
}
template<typename T1> void read(vector<T1> &v1, int n) {
	for (int i = 0; i < n; i++) {
		int c;	cin >> c;
		v1.pb(c);
	}
}

ull MOD_X(ull a, ull n, ull m) {
	ull x = 0, y = a % m;
	while (n) {
		if (n & 1)		x = (x + y) % m;
		y = (y * 2) % m;
		n /= 2;
	}
	return x % m;
}

ull power(ull a, ull n, ull m) {
	if (n == 0)	return 1;
	if (n == 1)	return a % m;
	ull c = power(a, n / 2, m);
	ull p = MOD_X(c % m, c % m, m);
	if (n % 2 == 0)	return p;
	return (MOD_X(p, a, m));
}


bool  check_composite(ull n, ull a, ull d, ull s) {
	ull x = power(a, d, n);
	if (x == 1 || x == n - 1)	return false;

	for (ull i = 1; i < s; i++) {
		x = power(x, 2, n);
		if (x == n - 1)	return false;
	}
	return true;
}

bool millerRabin(ull n) {
	if (n < 2)		return false;

	int r = 0;
	ull d = n - 1;
	while (!(d & 1)) {
		d >>= 1;
		r++;
	}

	for (ull a : {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37}) {
		if (n == a)	return true;
		if (check_composite(n, a, d, r))	return false;
	}
	return true;
}


int main() {
	fnf();

	int t;	cin >> t;
	while (t--) {
		ll ans1 = 0, ans2 = 0, ans3 = 0, ans4 = 0;

		ull n;	cin >> n;

		cout << (millerRabin(n) ? "YES" : "NO") << nl;

	}



	return 0;

}
